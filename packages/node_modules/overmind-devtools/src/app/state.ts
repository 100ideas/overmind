import { derive } from 'overmind'
import * as derived from './derived'
import { Apps, Tab, App, Component, Flush, Action } from './types'

export let isConnecting: boolean = true

export let isLoading: boolean = true

export let isAddingPort: boolean = false

export let error: string = null

export let currentPort: string = null

export let apps: Apps = {}

export let newPortValue: string = ''

export let currentTab: Tab = Tab.State

export let expandedStatePaths: string[] = ['']

export const currentApp: App = derive(derived.currentApp)

export const componentsMounted: Component[] = derive(derived.componentsMounted)

export const componentsUpdateCount: number = derive(
  derived.componentsUpdateCount
)

export const componentsStatePathCount: number = derive(
  derived.componentsStatePathCount
)

export const flushes: Flush[] = derive(derived.flushes)

export const flushesMutationsCount: number = derive(
  derived.flushesMutationsCount
)

export const flushesStatePathCount: number = derive(
  derived.flushesStatePathCount
)

export const currentAction: Action = derive(derived.currentAction)

export let expandAllActionDetails: boolean = false
