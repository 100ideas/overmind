import { Action } from './'
import * as mutations from './mutations'
import * as helpers from './helpers'
import { Message, Tab } from './state'

export default (action: Action) => {
  const onMessage = action<Message>()
    .mutation(mutations.addMessagesFromClient)
    .mutation(mutations.performMutationsByMessageType)

  const loadDevtools = action()
    // .do(({ storage }) => storage.clear())
    .map(helpers.getAppsFromStorage)
    .mutation(mutations.setApps)
    .map(helpers.getCurrentPortFromStorage)
    .mutation(mutations.setCurrentPort)
    .mutation(mutations.setAppLoaded)
    .map(helpers.connectCurrentPort(onMessage))

  const setError = action<string>().mutation(mutations.setError)

  const changeNewPortValue = action<string>()
    .map(helpers.toNumber)
    .mutation(mutations.setNewPortValue)

  const addPort = action()
    .map(helpers.getNewPortFromState)
    .mutation(mutations.setCurrentPort)
    .mutation(mutations.addNewApp)
    .mutation(mutations.resetNewPortValue)
    .do(helpers.storeApps)

  const changeTab = action<Tab>().mutation(mutations.changeTab)

  const openApp = action<string>()

  const toggleExpandState = action<string[]>().mutation(
    mutations.toggleExpandStatePath
  )

  const selectAction = action<string>()
    .mutation(mutations.toggleActionItemCollapse)
    .mutation(mutations.selectAction)

  const toggleCollapsed = action<{ isCollapsed: boolean }>().mutation(
    mutations.toggleCollapsed
  )

  return {
    loadDevtools,
    setError,
    changeNewPortValue,
    addPort,
    changeTab,
    openApp,
    toggleExpandState,
    selectAction,
    toggleCollapsed,
  }
}
