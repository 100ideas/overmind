import { Operation } from 'overmind'
import { Apps } from './types'

export const getAppsFromStorage: Operation.Map<any, Promise<Apps>> = ({
  storage,
}) => storage.get<Apps>('apps')

export const confirm: (text: string) => Operation.Filter = (text) => ({
  utils,
}) => utils.confirmDialog(text)

export const getCurrentPortFromStorage: Operation.Map<any, Promise<string>> = ({
  storage,
}) => storage.get<string>('currentPort')

export const getNewPortFromState: Operation.Map<any, string> = ({ state }) =>
  state.newPortValue

export const storeApps: Operation.Run = ({ storage, state }) =>
  storage.set('apps', state.apps)

export const toNumber: Operation.Map<string, string> = (_, value) =>
  String(Number(value))

export const connectCurrentPort: (
  action: (message: any) => void
) => Operation.Run = (action) => ({ state, connector }) => {
  if (!state.currentPort) {
    return
  }

  connector.addPort(state.currentPort, action)
}

export const removeCurrentPort: Operation.Run = ({ state, connector }) =>
  connector.removePort(state.currentPort)

export const isNotExpandingAllActions: Operation.Filter = ({ state }) =>
  !state.expandAllActionDetails
