import { Operation } from 'overmind'
import { Message } from './types'

export const isPortExistsMessage: Operation.When<Message> = ({
  value: message,
}) => message.messages[0].type === 'PORT_EXISTS'

export const confirm: (text: string) => Operation.Filter = (text) => ({
  utils,
}) => utils.confirmDialog(text)

export const getCurrentPortFromStorage: Operation.Map<any, Promise<string>> = ({
  storage,
}) => storage.get<string>('currentPort')

export const getNewPortFromState: Operation.Map<any, string> = ({ state }) =>
  state.newPortValue

export const toNumber: Operation.Map<string, string> = ({ value }) =>
  String(Number(value))

export const connectCurrentPort: (
  action: (message: any) => void
) => Operation.Run = (action) => ({ state, connector }) => {
  connector.connect(
    state.port,
    action
  )
}

export const isNotExpandingAllActions: Operation.Filter = ({ state }) =>
  !state.expandAllActionDetails
