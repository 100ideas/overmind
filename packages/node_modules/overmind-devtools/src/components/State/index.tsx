import { createElement, SFC } from 'react'
import { useOvermind } from '../../app'
import * as styles from './styles'
import * as textStyles from '../../styles/text'
import Inspector, { RenderPaths } from '../Inspector'
import { css } from 'emotion'

const DerivedWrapper: SFC = ({ children }) => (
  <div className={styles.label}>
    <div className={styles.labelWrapper}>
      <div className={styles.derivedLabel}>
        <span className={css(textStyles.hint, textStyles.monospace)}>
          derived
        </span>
      </div>
    </div>
    <div>{children}</div>
  </div>
)

const State: SFC = () => {
  const { state, actions } = useOvermind()

  return (
    <div className={styles.wrapper}>
      <Inspector
        value={state.currentApp.state || {}}
        expandedPaths={state.expandedStatePaths}
        onToggleExpand={actions.toggleExpandState}
        renderPaths={
          Object.assign(
            {},
            Object.keys(state.currentApp.derived || {}).reduce(
              (aggr, key) =>
                Object.assign(aggr, {
                  [key]: (children) => (
                    <DerivedWrapper key={key}>{children}</DerivedWrapper>
                  ),
                }),
              {}
            )
          ) as RenderPaths
        }
      />
    </div>
  )
}

export default State
