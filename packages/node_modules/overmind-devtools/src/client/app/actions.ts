import { Action } from './'
import { Tab } from './state'
import * as mutations from './mutations'
import * as helpers from './helpers'

export default (action: Action) => {
  const onMessage = action<any>().mutation(mutations.addMessageFromClient)

  return {
    loadDevtools: action()
      .map(helpers.getAppsFromStorage)
      .mutation(mutations.setApps)
      .map(helpers.getCurrentPortFromStorage)
      .mutation(mutations.setCurrentPort)
      .mutation(mutations.setAppLoaded)
      .map(helpers.connectCurrentPort(onMessage)),
    setError: action<string>().mutation(mutations.setError),
    changeNewPortValue: action<string>()
      .map(helpers.toNumber)
      .mutation(mutations.setNewPortValue),
    addPort: action()
      .map(helpers.getNewPortFromState)
      .mutation(mutations.setCurrentPort)
      .mutation(mutations.addNewApp)
      .mutation(mutations.resetNewPortValue)
      .do(helpers.storeApps),
    changeTab: action().mutation((value: string) => {}),
    openApp: action<string>(),
  }
}
