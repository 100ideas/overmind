export type Mutation = {
  args: any[]
  method: string
  path: string
}

export type Flush = {
  mutations: Mutation[]
  components: string[]
}

export type Component = {
  id: string
  name: string
  isMounted: boolean
  paths: string[]
  updateCount: number
}

export type Components = {
  [id: string]: Component
}

export type App = {
  name: string
  port: string
  messages: AppMessage[]
  state: object
  components: Components
  flushes: Flush[]
}

export type Apps = {
  [port: string]: App
}

export type AppMessage = {
  type: string
  data: any
}

export type Message = {
  port: string
  message: AppMessage[]
}

export enum Tab {
  State = 'State',
  Console = 'Console',
  Components = 'Components',
}

export type State = {
  isConnecting: boolean
  isLoading: boolean
  error: string
  currentPort: string
  apps: Apps
  newPortValue: string
  currentTab: Tab
  expandedStatePaths: string[]
}

const state: State = {
  isConnecting: true,
  isLoading: true,
  error: null,
  currentPort: null,
  apps: {},
  newPortValue: '',
  currentTab: Tab.State,
  expandedStatePaths: [''],
}

export default state
