const WebSocketServer = require('ws').Server

class ConnectionManager {
  constructor(mainWindow) {
    this.mainWindow = mainWindow
    this.connect = this.connect.bind(this)
    this.onDevtoolsMessage = this.onDevtoolsMessage.bind(this)
    this.onConnection = this.onConnection.bind(this)
    this.onError = this.onError.bind(this)
  }
  onError() {
    this.mainWindow.webContents.send('port:exists')
  }
  onConnection(ws) {
    this.ws = ws
    this.ws.on('message', this.onAppMessage.bind(this))
  }
  onAppMessage(message) {
    const parsedMessage = JSON.parse(message)
    this.mainWindow.webContents.send('message', parsedMessage)
  }
  onDevtoolsMessage(_, payload) {
    if (!this.clients[payload.port] || !this.clients[payload.port].ws) {
      return
    }

    this.ws.send(JSON.stringify(payload))
  }
  connect(_, port) {
    if (this.wss) {
      return
    }

    this.wss = new WebSocketServer({ port: Number(port) })
    this.wss.on('connection', this.onConnection)
    this.wss.on('error', this.onError)
  }
}

module.exports = ConnectionManager
