import App from './'

describe('Reaction', () => {
  test('should instantiate app with reactions', () => {
    let hasRunReaction = false
    const app = new App({
      state: {
        foo: 'bar',
      },
      actions: {
        foo: (action) =>
          action<void>().mutation((state) => (state.foo = 'bar2')),
      },
      reactions: {
        foo: (reaction, action) =>
          reaction(
            (state) => state.foo,
            action<void>().do(() => {
              hasRunReaction = true
            })
          ),
      },
    })
    app.actions.foo()
    expect(hasRunReaction).toBe(true)
  })
  test('should react to nested changes', () => {
    let hasRunReaction = false
    const app = new App({
      state: {
        foo: [
          {
            completed: false,
          },
        ],
      },
      actions: {
        foo: (action) =>
          action<void>().mutation((state) => (state.foo[0].completed = true)),
      },
      reactions: {
        foo: (reaction, action) =>
          reaction(
            (state) => state.foo,
            action<void>().do(() => {
              hasRunReaction = true
            })
          ),
      },
    })
    app.actions.foo()
    expect(hasRunReaction).toBe(true)
  })
})
