import { createMock, TAction } from './'

type State = {
  foo: string
  upperFoo: string
}

describe('Mock', () => {
  test('should run action tests', () => {
    type State = {
      foo: string
    }
    const state: State = {
      foo: 'bar',
    }
    const test: Action = ({ state }) => {
      state.foo = 'bar2'
    }
    const actions = { test }
    const config = {
      state,
      actions,
    }

    type Config = {
      state: typeof state
      actions: typeof actions
    }

    type Action<Input = void> = TAction<Config, Input>

    const mock = createMock(config)

    return mock.actions.test().then((result) =>
      expect(result).toEqual({
        mutations: [
          {
            method: 'set',
            path: 'foo',
            args: ['bar2'],
          },
        ],
        effects: [],
      })
    )
  })
})
