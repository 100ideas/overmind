export const SYMBOL = Symbol('LITERAL')

export class Literal {
  tag = SYMBOL
  value: string
  el: any
  parent: any
  context: any
  constructor(value) {
    this.value = String(value)
  }
  mount(parent, context) {
    this.parent = parent
    this.context = context
    this.el = context.factory.createTextNode(this.value)

    return this
  }
  reconcile(newLiteral) {
    if (this.value === newLiteral.value) {
      return
    }

    this.value = newLiteral.value
    this.el.nodeValue = this.value

    return this
  }
  isNull() {
    return false
  }
  getElement() {
    return this.el
  }
  unmount() {
    return this
  }
  toString() {
    return this.value
  }
}
