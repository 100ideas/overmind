// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LITERAL should reconcile NULL to literal 1`] = `
Array [
  Object {
    "tagName": "div",
    "type": "createElement",
  },
  Object {
    "child": "DIV",
    "type": "ROOT - appendChild",
  },
  Object {
    "content": "foo",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "appendChild",
  },
]
`;

exports[`LITERAL should reconcile NULL to literal 2`] = `"<div>foo</div>"`;

exports[`LITERAL should reconcile NULL to literal to nearest element 1`] = `
Array [
  Object {
    "tagName": "div",
    "type": "createElement",
  },
  Object {
    "content": "foo",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "appendChild",
  },
  Object {
    "content": "baz",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (baz)",
    "target": "DIV",
    "type": "appendChild",
  },
  Object {
    "child": "DIV",
    "type": "ROOT - appendChild",
  },
  Object {
    "content": "bar",
    "type": "createTextNode",
  },
  Object {
    "newChild": "TEXT_NODE (bar)",
    "prevChild": "TEXT_NODE (baz)",
    "target": "DIV",
    "type": "insertBefore",
  },
]
`;

exports[`LITERAL should reconcile NULL to literal to nearest element 2`] = `"<div>foobarbaz</div>"`;

exports[`LITERAL should reconcile element literal children 1`] = `
Array [
  Object {
    "tagName": "div",
    "type": "createElement",
  },
  Object {
    "content": "foo",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "appendChild",
  },
  Object {
    "child": "DIV",
    "type": "ROOT - appendChild",
  },
  Object {
    "target": "TEXT_NODE (foo)",
    "type": "nodeValue",
  },
]
`;

exports[`LITERAL should reconcile element literal children 2`] = `"<div>bar</div>"`;

exports[`LITERAL should reconcile literal to NULL 1`] = `
Array [
  Object {
    "tagName": "div",
    "type": "createElement",
  },
  Object {
    "content": "foo",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "appendChild",
  },
  Object {
    "child": "DIV",
    "type": "ROOT - appendChild",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "removeChild",
  },
]
`;

exports[`LITERAL should reconcile literal to NULL 2`] = `"<div></div>"`;

exports[`LITERAL should reconcile literals 1`] = `
Array [
  Object {
    "tagName": "div",
    "type": "createElement",
  },
  Object {
    "content": "foo",
    "type": "createTextNode",
  },
  Object {
    "child": "TEXT_NODE (foo)",
    "target": "DIV",
    "type": "appendChild",
  },
  Object {
    "child": "DIV",
    "type": "ROOT - appendChild",
  },
  Object {
    "target": "TEXT_NODE (foo)",
    "type": "nodeValue",
  },
]
`;

exports[`LITERAL should reconcile literals 2`] = `"<div>bar</div>"`;
