export type Execution = {
  operatorId: number
  actionId: number
  executionId: number
}

export type ExecutionContext = {
  __execution: Execution
  __path: string[]
}

export type ActionExecution = {
  actionId: number
  executionId: number
  actionName: string
  value?: any
}

export type OperatorExecution = {
  actionId: number
  executionId: number
  operatorId: number
  type: string
  name: string
  path: string
}

export type EffectResult = {
  name: string
  method: string | number | symbol
  result: any
  args: any[]
}

export interface ActionChainEvents {
  effect: Execution & EffectResult
  'action:start': ActionExecution
  'action:end': ActionExecution
  'operator:start': OperatorExecution
  'operator:async': OperatorExecution & { isAsync: true }
  'operator:end': OperatorExecution & { isAsync: boolean; result: any }
}
